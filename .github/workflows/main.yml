name: Build and test flutter

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
    - name: Create .env files
      run: |
        touch .env
        touch .env.dev
        echo "API_HOST=${{ secrets.API_HOST }}" > .env
        echo "MINIO_HOST=${{ secrets.MINIO_HOST }}" >> .env
        echo "DISCORD_INVITE=${{ secrets.DISCORD_INVITE }}" >> .env
        echo "INSTAGRAM_URL=${{ secrets.INSTAGRAM_URL }}" >> .env
        echo "GITHUB_URL=${{ secrets.GITHUB_URL }}" >> .env
        echo "APPSTORE_ID=${{ secrets.APPSTORE_ID }}" >> .env
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: any
        flutter-version: 3.x
    - name: Install dependencies
      run: |
        flutter --version
        flutter pub get

    - name: Post lint results as a comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const results = '${{ steps.lint.outputs.results }}';
          if (results) {
            const comment = `### Flutter Analyze Results\n\`\`\`\n${results}\n\`\`\``;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.payload.pull_request.number,
              body: comment,
            });
          }

    - name: Lint code
      id: lint
      run: |
        flutter analyze > analysis_results.txt || true
        echo "::set-output name=results::$(cat analysis_results.txt)"

    - name: Run tests
      run: flutter test

    - name: Build APK
      run: flutter build apk --debug
